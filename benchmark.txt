# JMH version: 1.37
# VM version: JDK 17.0.12, OpenJDK 64-Bit Server VM, 17.0.12+7-LTS
# VM invoker: /Users/mastkey/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=60817:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ru.mastkey.lesson15.load_balancing_multiple_consumers_test.KafkaLBMCTest.kafkaProducersConsumers

# Run progress: 0,00% complete, ETA 00:25:00
# Fork: 1 of 1
# Warmup Iteration   1: 4,361 ops/s
# Warmup Iteration   2: 4,898 ops/s
# Warmup Iteration   3: 4,891 ops/s
# Warmup Iteration   4: 4,882 ops/s
# Warmup Iteration   5: 4,897 ops/s
# Warmup Iteration   6: 4,902 ops/s
# Warmup Iteration   7: 4,913 ops/s
# Warmup Iteration   8: 4,926 ops/s
# Warmup Iteration   9: 4,928 ops/s
# Warmup Iteration  10: 4,913 ops/s
Iteration   1: 4,920 ops/s
Iteration   2: 4,935 ops/s
Iteration   3: 4,933 ops/s
Iteration   4: 4,940 ops/s
Iteration   5: 4,935 ops/s


Result "ru.mastkey.lesson15.load_balancing_multiple_consumers_test.KafkaLBMCTest.kafkaProducersConsumers":
  4,932 ±(99.9%) 0,029 ops/s [Average]
  (min, avg, max) = (4,920, 4,932, 4,940), stdev = 0,007
  CI (99.9%): [4,904, 4,961] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.12, OpenJDK 64-Bit Server VM, 17.0.12+7-LTS
# VM invoker: /Users/mastkey/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=60817:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ru.mastkey.lesson15.load_balancing_multiple_consumers_test.RabbitLBMCTest.testProducerConsumer

# Run progress: 10,00% complete, ETA 00:22:54
# Fork: 1 of 1
# Warmup Iteration   1: 339,564 ops/s
# Warmup Iteration   2: 199,828 ops/s
# Warmup Iteration   3: 235,705 ops/s
# Warmup Iteration   4: 217,361 ops/s
# Warmup Iteration   5: 165,862 ops/s
# Warmup Iteration   6: 123,138 ops/s
# Warmup Iteration   7: 157,555 ops/s
# Warmup Iteration   8: 131,925 ops/s
# Warmup Iteration   9: 135,914 ops/s
# Warmup Iteration  10: 122,310 ops/s
Iteration   1: 123,779 ops/s
Iteration   2: 101,578 ops/s
Iteration   3: 91,169 ops/s
Iteration   4: 84,886 ops/s
Iteration   5: 64,546 ops/s


Result "ru.mastkey.lesson15.load_balancing_multiple_consumers_test.RabbitLBMCTest.testProducerConsumer":
  93,192 ±(99.9%) 83,914 ops/s [Average]
  (min, avg, max) = (64,546, 93,192, 123,779), stdev = 21,792
  CI (99.9%): [9,277, 177,106] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.12, OpenJDK 64-Bit Server VM, 17.0.12+7-LTS
# VM invoker: /Users/mastkey/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=60817:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ru.mastkey.lesson15.load_balancing_test.KafkaLBTest.kafkaProducersConsumers

# Run progress: 20,00% complete, ETA 00:20:14
# Fork: 1 of 1
# Warmup Iteration   1: 2398,498 ops/s
# Warmup Iteration   2: 3907,930 ops/s
# Warmup Iteration   3: 4008,445 ops/s
# Warmup Iteration   4: 4014,116 ops/s
# Warmup Iteration   5: 3852,543 ops/s
# Warmup Iteration   6: 4021,991 ops/s
# Warmup Iteration   7: 4026,522 ops/s
# Warmup Iteration   8: 4032,816 ops/s
# Warmup Iteration   9: 4054,090 ops/s
# Warmup Iteration  10: 4046,523 ops/s
Iteration   1: 3904,879 ops/s
Iteration   2: 3933,195 ops/s
Iteration   3: 3944,198 ops/s
Iteration   4: 3934,052 ops/s
Iteration   5: 3978,659 ops/s


Result "ru.mastkey.lesson15.load_balancing_test.KafkaLBTest.kafkaProducersConsumers":
  3938,997 ±(99.9%) 102,283 ops/s [Average]
  (min, avg, max) = (3904,879, 3938,997, 3978,659), stdev = 26,563
  CI (99.9%): [3836,714, 4041,279] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.12, OpenJDK 64-Bit Server VM, 17.0.12+7-LTS
# VM invoker: /Users/mastkey/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=60817:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ru.mastkey.lesson15.load_balancing_test.RabbitLBTest.testProducerConsumer

# Run progress: 30,00% complete, ETA 00:17:40
# Fork: 1 of 1
# Warmup Iteration   1: 1666,368 ops/s
# Warmup Iteration   2: 951,070 ops/s
# Warmup Iteration   3: 706,291 ops/s
# Warmup Iteration   4: 672,795 ops/s
# Warmup Iteration   5: 613,672 ops/s
# Warmup Iteration   6: 586,001 ops/s
# Warmup Iteration   7: 473,497 ops/s
# Warmup Iteration   8: 457,552 ops/s
# Warmup Iteration   9: 314,202 ops/s
# Warmup Iteration  10: 289,961 ops/s
Iteration   1: 273,485 ops/s
Iteration   2: 374,990 ops/s
Iteration   3: 350,103 ops/s
Iteration   4: 397,439 ops/s
Iteration   5: 363,192 ops/s


Result "ru.mastkey.lesson15.load_balancing_test.RabbitLBTest.testProducerConsumer":
  351,842 ±(99.9%) 181,497 ops/s [Average]
  (min, avg, max) = (273,485, 351,842, 397,439), stdev = 47,134
  CI (99.9%): [170,345, 533,339] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.12, OpenJDK 64-Bit Server VM, 17.0.12+7-LTS
# VM invoker: /Users/mastkey/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=60817:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ru.mastkey.lesson15.multiple_consumers_test.KafkaMCTest.kafkaProducersConsumers

# Run progress: 40,00% complete, ETA 00:15:07
# Fork: 1 of 1
# Warmup Iteration   1: 4,265 ops/s
# Warmup Iteration   2: 4,796 ops/s
# Warmup Iteration   3: 4,791 ops/s
# Warmup Iteration   4: 4,799 ops/s
# Warmup Iteration   5: 4,814 ops/s
# Warmup Iteration   6: 4,809 ops/s
# Warmup Iteration   7: 4,819 ops/s
# Warmup Iteration   8: 4,829 ops/s
# Warmup Iteration   9: 4,856 ops/s
# Warmup Iteration  10: 4,851 ops/s
Iteration   1: 4,827 ops/s
Iteration   2: 4,834 ops/s
Iteration   3: 4,834 ops/s
Iteration   4: 4,839 ops/s
Iteration   5: 4,832 ops/s


Result "ru.mastkey.lesson15.multiple_consumers_test.KafkaMCTest.kafkaProducersConsumers":
  4,833 ±(99.9%) 0,017 ops/s [Average]
  (min, avg, max) = (4,827, 4,833, 4,839), stdev = 0,004
  CI (99.9%): [4,816, 4,850] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.12, OpenJDK 64-Bit Server VM, 17.0.12+7-LTS
# VM invoker: /Users/mastkey/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=60817:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ru.mastkey.lesson15.multiple_consumers_test.RabbitMCTest.testProducerConsumer

# Run progress: 50,00% complete, ETA 00:12:38
# Fork: 1 of 1
# Warmup Iteration   1: 562,435 ops/s
# Warmup Iteration   2: 271,692 ops/s
# Warmup Iteration   3: 221,128 ops/s
# Warmup Iteration   4: 183,628 ops/s
# Warmup Iteration   5: 166,061 ops/s
# Warmup Iteration   6: 163,334 ops/s
# Warmup Iteration   7: 148,166 ops/s
# Warmup Iteration   8: 141,488 ops/s
# Warmup Iteration   9: 123,562 ops/s
# Warmup Iteration  10: 109,030 ops/s
Iteration   1: 104,665 ops/s
Iteration   2: 81,827 ops/s
Iteration   3: 93,013 ops/s
Iteration   4: 73,736 ops/s
Iteration   5: 74,617 ops/s


Result "ru.mastkey.lesson15.multiple_consumers_test.RabbitMCTest.testProducerConsumer":
  85,572 ±(99.9%) 50,722 ops/s [Average]
  (min, avg, max) = (73,736, 85,572, 104,665), stdev = 13,172
  CI (99.9%): [34,849, 136,294] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.12, OpenJDK 64-Bit Server VM, 17.0.12+7-LTS
# VM invoker: /Users/mastkey/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=60817:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ru.mastkey.lesson15.simple_test.KafkaSimpleTest.kafkaProducersConsumers

# Run progress: 60,00% complete, ETA 00:10:05
# Fork: 1 of 1
# Warmup Iteration   1: 2599,135 ops/s
# Warmup Iteration   2: 4466,624 ops/s
# Warmup Iteration   3: 4552,773 ops/s
# Warmup Iteration   4: 4562,879 ops/s
# Warmup Iteration   5: 4584,673 ops/s
# Warmup Iteration   6: 4628,804 ops/s
# Warmup Iteration   7: 4626,082 ops/s
# Warmup Iteration   8: 4620,074 ops/s
# Warmup Iteration   9: 4642,333 ops/s
# Warmup Iteration  10: 4547,657 ops/s
Iteration   1: 4429,701 ops/s
Iteration   2: 4380,757 ops/s
Iteration   3: 4210,759 ops/s
Iteration   4: 4288,206 ops/s
Iteration   5: 4397,299 ops/s


Result "ru.mastkey.lesson15.simple_test.KafkaSimpleTest.kafkaProducersConsumers":
  4341,344 ±(99.9%) 346,384 ops/s [Average]
  (min, avg, max) = (4210,759, 4341,344, 4429,701), stdev = 89,955
  CI (99.9%): [3994,961, 4687,728] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.12, OpenJDK 64-Bit Server VM, 17.0.12+7-LTS
# VM invoker: /Users/mastkey/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=60817:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ru.mastkey.lesson15.simple_test.RabbitSimpleTest.testProducerConsumer

# Run progress: 70,00% complete, ETA 00:07:34
# Fork: 1 of 1
# Warmup Iteration   1: 1811,632 ops/s
# Warmup Iteration   2: 942,256 ops/s
# Warmup Iteration   3: 808,201 ops/s
# Warmup Iteration   4: 627,293 ops/s
# Warmup Iteration   5: 416,112 ops/s
# Warmup Iteration   6: 580,971 ops/s
# Warmup Iteration   7: 477,667 ops/s
# Warmup Iteration   8: 470,977 ops/s
# Warmup Iteration   9: 427,081 ops/s
# Warmup Iteration  10: 489,327 ops/s
Iteration   1: 382,251 ops/s
Iteration   2: 303,624 ops/s
Iteration   3: 241,438 ops/s
Iteration   4: 295,986 ops/s
Iteration   5: 242,078 ops/s


Result "ru.mastkey.lesson15.simple_test.RabbitSimpleTest.testProducerConsumer":
  293,075 ±(99.9%) 222,366 ops/s [Average]
  (min, avg, max) = (241,438, 293,075, 382,251), stdev = 57,748
  CI (99.9%): [70,710, 515,441] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.12, OpenJDK 64-Bit Server VM, 17.0.12+7-LTS
# VM invoker: /Users/mastkey/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=60817:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ru.mastkey.lesson15.stress_test.KafkaStressTest.kafkaProducersConsumers

# Run progress: 80,00% complete, ETA 00:05:02
# Fork: 1 of 1
# Warmup Iteration   1: 1,050 ops/s
# Warmup Iteration   2: 1,092 ops/s
# Warmup Iteration   3: 1,092 ops/s
# Warmup Iteration   4: 1,093 ops/s
# Warmup Iteration   5: 1,095 ops/s
# Warmup Iteration   6: 1,094 ops/s
# Warmup Iteration   7: 1,097 ops/s
# Warmup Iteration   8: 1,097 ops/s
# Warmup Iteration   9: 1,096 ops/s
# Warmup Iteration  10: 1,097 ops/s
Iteration   1: 1,095 ops/s
Iteration   2: 1,096 ops/s
Iteration   3: 1,097 ops/s
Iteration   4: 1,096 ops/s
Iteration   5: 1,096 ops/s


Result "ru.mastkey.lesson15.stress_test.KafkaStressTest.kafkaProducersConsumers":
  1,096 ±(99.9%) 0,003 ops/s [Average]
  (min, avg, max) = (1,095, 1,096, 1,097), stdev = 0,001
  CI (99.9%): [1,093, 1,099] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 17.0.12, OpenJDK 64-Bit Server VM, 17.0.12+7-LTS
# VM invoker: /Users/mastkey/Library/Java/JavaVirtualMachines/corretto-17.0.12/Contents/Home/bin/java
# VM options: -javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=60817:/Applications/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: ru.mastkey.lesson15.stress_test.RabbitStressTest.testProducerConsumer

# Run progress: 90,00% complete, ETA 00:02:31
# Fork: 1 of 1
# Warmup Iteration   1: 151,678 ops/s
# Warmup Iteration   2: 76,324 ops/s
# Warmup Iteration   3: 50,124 ops/s
# Warmup Iteration   4: 55,199 ops/s
# Warmup Iteration   5: 47,455 ops/s
# Warmup Iteration   6: 48,669 ops/s
# Warmup Iteration   7: 37,800 ops/s
# Warmup Iteration   8: 32,813 ops/s
# Warmup Iteration   9: 29,244 ops/s
# Warmup Iteration  10: 24,554 ops/s
Iteration   1: 21,576 ops/s
Iteration   2: 26,162 ops/s
Iteration   3: 30,292 ops/s
Iteration   4: 26,562 ops/s
Iteration   5: 25,775 ops/s


Result "ru.mastkey.lesson15.stress_test.RabbitStressTest.testProducerConsumer":
  26,074 ±(99.9%) 11,924 ops/s [Average]
  (min, avg, max) = (21,576, 26,074, 30,292), stdev = 3,097
  CI (99.9%): [14,149, 37,998] (assumes normal distribution)


# Run complete. Total time: 00:25:14

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                                            Mode  Cnt     Score     Error  Units
r.m.l.load_balancing_multiple_consumers_test.KafkaLBMCTest.kafkaProducersConsumers  thrpt    5     4,932 ±   0,029  ops/s
r.m.l.load_balancing_multiple_consumers_test.RabbitLBMCTest.testProducerConsumer    thrpt    5    93,192 ±  83,914  ops/s
r.m.l.load_balancing_test.KafkaLBTest.kafkaProducersConsumers                       thrpt    5  3938,997 ± 102,283  ops/s
r.m.l.load_balancing_test.RabbitLBTest.testProducerConsumer                         thrpt    5   351,842 ± 181,497  ops/s
r.m.l.multiple_consumers_test.KafkaMCTest.kafkaProducersConsumers                   thrpt    5     4,833 ±   0,017  ops/s
r.m.l.multiple_consumers_test.RabbitMCTest.testProducerConsumer                     thrpt    5    85,572 ±  50,722  ops/s
r.m.l.simple_test.KafkaSimpleTest.kafkaProducersConsumers                           thrpt    5  4341,344 ± 346,384  ops/s
r.m.l.simple_test.RabbitSimpleTest.testProducerConsumer                             thrpt    5   293,075 ± 222,366  ops/s
r.m.l.stress_test.KafkaStressTest.kafkaProducersConsumers                           thrpt    5     1,096 ±   0,003  ops/s
r.m.l.stress_test.RabbitStressTest.testProducerConsumer                             thrpt    5    26,074 ±  11,924  ops/s
